syntax = "proto2";

import "bgs/low/pb/client/attribute_types.proto";
import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/rpc_types.proto";
package bgs.protocol.games.v1;

option java_package = "bnet.protocol.games.v1";
option java_outer_classname = "GameMasterTypesProto";
option optimize_for = SPEED;

enum GameEndedReason {
  GAME_ENDED_REASON_DISSOLVED_BY_GAME_SERVER = 0;
  GAME_ENDED_REASON_DISSOLVED_BY_SERVICE = 1;
  GAME_ENDED_REASON_DISSOLVED_BY_PLAYER = 2;
  GAME_ENDED_REASON_DISSOLVED_BY_GAME_SERVER_DISCONNECT = 3;
  GAME_ENDED_REASON_UNKNOWN = 4;
  GAME_ENDED_REASON_GAME_MASTER_DISCONNECT = 5;
}

message HostRoute {
  optional .bgs.protocol.ProcessId host = 1;
  optional .bgs.protocol.ProcessId proxy = 2;
}

message Player {
  optional .bgs.protocol.Identity identity = 1;
  repeated .bgs.protocol.Attribute attribute = 2;
  optional double rating = 3;
  optional .bgs.protocol.games.v1.HostRoute host = 4;
}

message ConnectInfo {
  required .bgs.protocol.EntityId game_account_id = 1;
  required string host = 2;
  required int32 port = 3;
  optional bytes token = 4;
  repeated .bgs.protocol.Attribute attribute = 5;
}

message GameStatsBucket {
  optional float bucket_min = 1 [default = 0];
  optional float bucket_max = 2 [default = 4.2949673e+09];
  optional uint32 wait_milliseconds = 3 [default = 0];
  optional uint32 games_per_hour = 4 [default = 0];
  optional uint32 active_games = 5 [default = 0, deprecated = true];
  optional uint32 active_players = 6 [default = 0, deprecated = true];
  optional uint32 forming_games = 7 [default = 0];
  optional uint32 waiting_players = 8 [default = 0];
  optional uint32 open_joinable_games = 9 [default = 0];
  optional uint32 players_in_open_joinable_games = 10 [default = 0];
  optional uint32 open_games_total = 11 [default = 0];
  optional uint32 players_in_open_games_total = 12 [default = 0];
}

message GameFactoryDescription {
  required fixed64 id = 1;
  optional string name = 2;
  repeated .bgs.protocol.Attribute attribute = 3;
  repeated .bgs.protocol.games.v1.GameStatsBucket stats_bucket = 4;
  optional fixed64 unseeded_id = 5 [default = 0];
  optional bool allow_queueing = 6 [default = true];
  optional bool requires_player_rating = 7 [default = false];
  optional bool requires_queue_priority = 8 [default = false];
}

message GameHandle {
  required fixed64 factory_id = 1;
  required .bgs.protocol.EntityId game_id = 2;
}

message CancelGameEntryRequest {
  required fixed64 request_id = 1;
  optional fixed64 factory_id = 2;
  repeated .bgs.protocol.games.v1.Player player = 3;
  optional .bgs.protocol.EntityId cancel_request_initiator = 4;
}

message CancelGameEntryResponse {
  optional bool entire_game_entry_cancelled = 1;
}


