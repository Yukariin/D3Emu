syntax = "proto2";

import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/presence_types.proto";
import "bgs/low/pb/client/rpc_types.proto";
package bgs.protocol.presence.v1;

option java_package = "bnet.protocol.presence.v1";
option java_outer_classname = "PresenceServiceProto";
option optimize_for = CODE_SIZE;
option cc_generic_services = false;
option java_generic_services = true;

message SubscribeRequest {
  optional .bgs.protocol.EntityId agent_id = 1;
  required .bgs.protocol.EntityId entity_id = 2;
  required uint64 object_id = 3;
  repeated fixed32 program = 4;
  optional bool flag_public = 5 [default = true, deprecated = true];
  repeated .bgs.protocol.presence.v1.FieldKey key = 6;
}

message SubscribeNotificationRequest {
  required .bgs.protocol.EntityId entity_id = 1;
}

message UnsubscribeRequest {
  optional .bgs.protocol.EntityId agent_id = 1;
  required .bgs.protocol.EntityId entity_id = 2;
  optional uint64 object_id = 3;
}

message UpdateRequest {
  required .bgs.protocol.EntityId entity_id = 1;
  repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
  optional bool no_create = 3 [default = false];
  optional .bgs.protocol.EntityId agent_id = 4;
}

message QueryRequest {
  required .bgs.protocol.EntityId entity_id = 1;
  repeated .bgs.protocol.presence.v1.FieldKey key = 2;
  optional .bgs.protocol.EntityId agent_id = 3;
}

message QueryResponse {
  repeated .bgs.protocol.presence.v1.Field field = 2;
}

message OwnershipRequest {
  required .bgs.protocol.EntityId entity_id = 1;
  optional bool release_ownership = 2 [default = false];
}

service PresenceService {
  option (.bgs.protocol.service_options) = {
    descriptor_name: "bnet.protocol.presence.PresenceService"
  };
  option (.bgs.protocol.sdk_service_options) = {
    outbound: true
  };
  rpc Subscribe(.bgs.protocol.presence.v1.SubscribeRequest) returns (.bgs.protocol.NoData) {
    option (.bgs.protocol.method_options) = {
      id: 1
    };
  }
  rpc Unsubscribe(.bgs.protocol.presence.v1.UnsubscribeRequest) returns (.bgs.protocol.NoData) {
    option (.bgs.protocol.method_options) = {
      id: 2
    };
  }
  rpc Update(.bgs.protocol.presence.v1.UpdateRequest) returns (.bgs.protocol.NoData) {
    option (.bgs.protocol.method_options) = {
      id: 3
    };
  }
  rpc Query(.bgs.protocol.presence.v1.QueryRequest) returns (.bgs.protocol.presence.v1.QueryResponse) {
    option (.bgs.protocol.method_options) = {
      id: 4
    };
  }
  rpc Ownership(.bgs.protocol.presence.v1.OwnershipRequest) returns (.bgs.protocol.NoData) {
    option (.bgs.protocol.method_options) = {
      id: 5
    };
  }
  rpc SubscribeNotification(.bgs.protocol.presence.v1.SubscribeNotificationRequest) returns (.bgs.protocol.NoData) {
    option (.bgs.protocol.method_options) = {
      id: 7
    };
  }
}


